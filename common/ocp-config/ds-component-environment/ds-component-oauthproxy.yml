apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: ds-component-oauthproxy
  app: "${PROJECT}-${COMPONENT}"
parameters:
  - description: The name of the application project.
    displayName: Project
    name: PROJECT
    required: true
  - description: The name of the component
    displayName: Component
    name: COMPONENT
    required: true
  - description: The environment stage.
    displayName: Environment
    name: ENV
    required: true
  - name: TAGVERSION
    displayName: tag version
    description: The version to be used.
    value: latest
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory available for the container.
    value: 256Mi
    required: true
  - name: MEMORY_REQUEST
    displayName: Memory Request
    description: Minimum amount of memory requested for the container.
    value: 128Mi
    required: true
  - name: CPU_LIMIT
    displayName: CPU Limit
    description: Maximum Vamount of CPU available for the container.
    value: 250m
    required: true
  - name: CPU_REQUEST
    displayName: CPU Request
    description: Minimum amount of CPU requested for the container.
    value: 50m
    required: true
  - description: Session secret.
    displayName: Session secret
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: SESSION_SECRET
    required: true
  - name: NEXUS_PASSWORD
    value: NEXUS_PASSWORD
    required: true

objects:
  - apiVersion: v1
    data:
      password: "${NEXUS_PASSWORD}"
    kind: Secret
    metadata:
      name: nexus
    type: opaque

  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ${COMPONENT}-oauth
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${COMPONENT}"}}'

  - apiVersion: v1
    kind: Route
    metadata:
      name: ${COMPONENT}
    spec:
      tls:
        termination: reencrypt
      to:
        kind: Service
        name: ${COMPONENT}-oauth
        weight: 100
      wildcardPolicy: None

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${COMPONENT}-oauth
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: ${COMPONENT}-oauth-tls
    spec:
      ports:
        - name: ${COMPONENT}-oauth
          port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app: "${PROJECT}-${COMPONENT}"
        deploymentconfig: ${COMPONENT}-oauth
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${COMPONENT}-oauth
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: "${PROJECT}-${COMPONENT}"
        deploymentconfig: ${COMPONENT}-oauth
      strategy:
        activeDeadlineSeconds: 21600
        resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: "${PROJECT}-${COMPONENT}"
            deploymentconfig: ${COMPONENT}-oauth
            env: ${ENV}
        spec:
          containers:
            - name: oauth
              image: "${PROJECT}-${ENV}/${COMPONENT}-oauth:${TAGVERSION}"
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
              ports:
                - containerPort: 8443
                  protocol: TCP
                  name: public
              args:
                - --https-address=:8443
                - --provider=openshift
                - --openshift-service-account=${COMPONENT}-oauth
                - --upstream=http://${COMPONENT}.${PROJECT}-${ENV}.svc.cluster.local:8080
                - --tls-cert=/etc/tls/private/tls.crt
                - --tls-key=/etc/tls/private/tls.key
                - --cookie-secret=${SESSION_SECRET}
                - >-
                  --openshift-sar={"namespace":"${PROJECT}-${ENV}","resource":"services","name":"${COMPONENT}-oauth","verb":"get"}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/tls/private
                  name: ${COMPONENT}-oauth-tls
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          serviceAccount: ${COMPONENT}-oauth
          serviceAccountName: ${COMPONENT}-oauth
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${COMPONENT}-oauth-tls
              secret:
                defaultMode: 420
                secretName: ${COMPONENT}-oauth-tls
      test: false
      triggers:
        - type: ConfigChange
