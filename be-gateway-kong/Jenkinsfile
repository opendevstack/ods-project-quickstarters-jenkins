// build params

def odsNamespace = env.ODS_NAMESPACE ?: 'ods'
def odsGitRef = env.ODS_GIT_REF ?: 'master'
def odsImageTag = env.ODS_IMAGE_TAG ?: 'latest'

library("ods-jenkins-shared-library@${odsGitRef}")

def projectId = env.PROJECT_ID
def componentId = env.COMPONENT_ID.toLowerCase()
def packageName = env.PACKAGE_NAME
def gitUrlHttp = env.GIT_URL_HTTP
def group = env.GROUP_ID


odsQuickstarterPipeline(
  imageStreamTag: "${odsNamespace}/jenkins-slave-base:${odsImageTag}",
) { context ->

 odsQuickstarterStageCopyFiles(context)

 odsQuickstarterStageCreateOpenShiftResources(
   context,
   [directory: 'common/ocp-config/component-environment']
 )

  odsQuickstarterStageRenderJenkinsfile(context)
}



podTemplate(
      label: podLabel,
      cloud: 'openshift',
      containers: [conts],
      volumes: [],
      serviceAccount: 'jenkins'
    ) {
        node(podLabel) {
          stage('Checkout quickstarter') {
            checkout scm
          }
          stage("initialize target folder ${componentId}") {
              sh "mkdir -p ${componentId}"
          }
          stage('copy files from quickstart to generated project') {
              sh "cp -rv ${quickstarterBasepath}/files/. ${componentId}"
          }

          stage('Setup OpenShift resources') {
                      sh "cd ${quickstarterBasepath} ; sh ./create-be-gateway-kong-components.sh -qs . -p ${projectId} -c ${componentId}  --force"
          }
          stage('Create Jenkinsfile') {
            sh "sh common/scripts/renderJenkinsTemplate.sh \
                  --source ${quickstarterBasepath}/Jenkinsfile.template \
                  --target ${componentId}/Jenkinsfile \
                  --url ${gitUrlHttp} \
                  --project-id ${projectId} \
                  --component-id ${componentId}  \
                  --component-type ${quickstarterBasepath} \
                  --ods-image-tag ${odsImageTag} \
                  --ods-git-ref ${odsGitRef}"
          }
          stage('Create sonar-project.properties') {
            sh "sh common/scripts/renderSonarqubeTemplate.sh \
                  --source ${quickstarterBasepath}/sonar-project.properties.template \
                  --target ${componentId}/sonar-project.properties \
                  --project-id ${projectId} \
                  --component-id ${componentId}  \
                  --component-type ${quickstarterBasepath}"
          }
          stage('Push to remote') {
            withCredentials([usernamePassword(credentialsId: credentialsId, passwordVariable: 'pass', usernameVariable: 'user')]) {
              writeFile file: "/home/jenkins/.netrc", text: "machine ${gitHost} login ${user} password ${pass}"
            }
            sh "sh common/scripts/git_push.sh --dir ${componentId} --url ${gitUrlHttp}"
          }
      }
}
